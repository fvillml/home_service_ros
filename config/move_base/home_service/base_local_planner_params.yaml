TrajectoryPlannerROS:

  # Set the acceleration limits of the robot
  acc_lim_theta: 3.14
  acc_lim_x: 2.0
  acc_lim_y: 2.0

  # Set the velocity limits of the robot
  max_vel_x: 1.0
  min_vel_x: 0.1
  max_vel_theta: 1.3
  min_in_place_vel_theta: 0.5 # in place rotations

  #The velocity the robot will command when trying to escape from a stuck situation
  escape_vel: -0.1

  # We won't use a holonomic robot
  holonomic_robot: false

  # The tolerance in radians for the controller in yaw/rotation when achieving its goal 
  yaw_goal_tolerance: 0.05

  # The tolerance in meters for the controller in the x & y distance when achieving a goal 
  xy_goal_tolerance: 0.1

  # We'll configure how long and with what granularity we'll forward simulate trajectories:
  #   The amount of time to forward-simulate trajectories in seconds
  sim_time: 1.0

  # The step size, in meters, to take between points on a given trajectory
  sim_granularity: 0.025
  
  # The number of samples to use when exploring the x velocity space 
  vx_samples: 5
  
  # The number of samples to use when exploring the theta velocity space
  vtheta_samples: 10

  # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and 
  # path_distance are expressed in units of meters or cells
  meter_scoring: true 
  publish_cost_grid_pc: true

    # The cost function used to score each trajectory is in the following form:
  #   cost = path_distance_bias * dToP + goal_distance_bias * dToG + occdist_scale * MOC
  # where:
  #   dToP : distance to path from the endpoint of the trajectory in in meters
  #   dToG : distance to local goal from the endpoint of the trajectory in meters
  #   MOC  : maximum obstacle cost along the trajectory in obstacle cost (0-254)

  # The weighting for how much the controller should stay close to the path it was given,
  path_distance_bias: 0.6
  # The weighting for how much the controller should attempt to reach its local goal 
  goal_distance_bias: 0.8
  # The weighting for how much the controller should attempt to avoid obstacles
  occdist_scale: 0.01

